/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.licitat.hiberplay;

import com.google.common.base.Supplier;
import com.google.common.base.Suppliers;
import io.licitat.hiberplay.model.Post;
import io.licitat.hiberplay.model.Tag;

import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

import static org.hibernate.testing.transaction.TransactionUtil.doInJPA;

public class App {

    private static Supplier<EntityManagerFactory> factorySupplier = Suppliers.memoize(
        () -> Persistence.createEntityManagerFactory("my-persistence-unit")
    );

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        /*
        System.out.println(new App().getGreeting());

        Post thePost = doInJPA(App::createEMF, em -> {
            Post aPost = new Post("This is a post");
            em.persist(aPost);
            return aPost;
        });

        System.out.println(thePost.getId());
        */

        /*
        doInJPA(App::createEMF, em -> {
            Post aPost = new Post("This is a second post");
            Tag aNewTag = new Tag("First tag");

            aPost.addTag(aNewTag);

            em.persist(aPost);
            return aPost;
        });
        */

        doInJPA(factorySupplier, em -> {
            for (int i = 0; i < 3; i++) {
                Post aPost = new Post("This is a post with number " + (i + i));
                em.persist(aPost);
            }

            for (long i = 0; i < 3; i++) {
                Tag aTag = new Tag("This is a tag: " + i);
                aTag.tagPost(em.getReference(Post.class, i + 1));
                em.persist(aTag);
            }
        });

        doInJPA(factorySupplier, em -> {
            Post toRemove = em.find(Post.class, 1L);
            em.remove(toRemove);
        });
    }


    @Deprecated
    private static EntityManagerFactory createEMF() {
        return Persistence.createEntityManagerFactory("my-persistence-unit");
    }
}
